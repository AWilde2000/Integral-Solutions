name: Django CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
jobs:
  linting:
    runs-on: ${{ matrix.latest-list }}
    strategy:
      matrix:
        latest-list: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.7, 3.8, 3.9]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install tools
      run: |
        python -m pip install --upgrade pip
        pip install -r src/requirements-dev.txt
    - name: Lint with black
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
      run: |
        python -m black .
    - name: Lint with flake8
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
      run: |
        python -m flake8 # noqa . --show-source --statistics --ignore=W391
  
  build:
    runs-on: ${{ matrix.latest-list }}
    strategy:
      max-parallel: 4
      matrix:
        latest-list: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r src/requirements.txt
    - name: Run Tests
      env:
        DEBUG: ${{ secrets.DEBUG }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_HOST: ${{ secrets.DB_HOST }}
      run: |
        python src/manage.py test
